name: Publish Release Artefacts

on:
  pull_request:
    types: [opened, reopened, synchronize]
  release:
    types: [prereleased, released]

  workflow_dispatch:
    inputs:
      version:
        description: "Version tag (E.G. v0.10.0-rc.1, v0.10.0)"
        required: true
        type: string

env:
  #version: ${{ inputs.version || github.ref_name }}
  version: testing

permissions:
  id-token: write
  contents: write
  packages: write

jobs:
  # DEBIAN
  # publish-debian:
  #   name: Publish ${{ env.version }}-${{ matrix.arch }} Debian
  #   strategy:
  #     matrix:
  #       arch: [amd64, arm64]
  #   runs-on:
  #     labels: ${{ matrix.arch == 'arm64' && 'ubuntu-24.04-arm' || 'ubuntu-latest' }}
  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@main
  #       with:
  #         ref: ${{ env.version}}
  #         fetch-depth: 0

  #     - name: Rust cache
  #       uses: Swatinem/rust-cache@v2
  #       with:
  #         # Only update the cache on push onto the next branch. This strikes a nice balance between
  #         # cache hits and cache evictions (github has a 10GB cache limit).
  #         save-if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/next' }}

  #     - name: Rust update
  #       run: |
  #         rustup update --no-self-update

  #     - name: Build packages
  #       uses: ./.github/actions/build_package
  #       with:
  #         gitref: ${{ env.version }}

  #     - name: Package names
  #       run: |
  #         echo "node-package=miden-node-${{ env.version }}-${{ matrix.arch }}.deb"     >> $GITHUB_ENV
  #         echo "faucet-package=miden-faucet-${{ env.version }}-${{ matrix.arch }}.deb" >> $GITHUB_ENV

  #     - name: Rename package files
  #       run: |
  #         mv miden-node.deb   ${{ env.node-package }}
  #         mv miden-faucet.deb ${{ env.faucet-package }}

  #     - name: shasum packages
  #       run: |
  #         sha256sum ${{ env.node-package }}   > ${{ env.node-package }}.checksum
  #         sha256sum ${{ env.faucet-package }} > ${{ env.faucet-package }}.checksum

  #     - name: Publish packages
  #       env:
  #         GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       run: |
  #         gh release upload ${{ env.version }} \
  #           ${{ env.node-package }} \
  #           ${{ env.node-package }}.checksum \
  #           ${{ env.faucet-package }} \
  #           ${{ env.faucet-package }}.checksum \
  #           --clobber

  # DOCKER
  publish-docker:
    name: Publish ${{ inputs.version }} Docker
    strategy:
      matrix:
        component: [node]
    runs-on:
      labels: "ubuntu-latest"
    steps:
      - name: Checkout repo
        uses: actions/checkout@main
        with:
          #ref: ${{ env.version}}
          fetch-depth: 0

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./bin/${{ matrix.component }}/Dockerfile
          push: true
          tags: ${{ env.version }}
