# This action wraps ssm send-command by waiting for command completion and writing output logs
# and additionally fails if the command failed.

name: SSM send-command wrapper
description: 'Runs the given commands using aws ssm send-command as a shell script. The logs and status are monitored for success.'
inputs:
  instance-id:
    required: true
  command:
    required: true
    description: 'A single command only'
runs:
  using: "composite"
  steps:
    - name: Execute command
      shell: bash
      id: run-command
      run: |
          COMMAND_ID=$(aws ssm send-command \
            --instance-ids ${{ inputs.instance-id }} \
            --document-name "AWS-RunShellScript" \
            --parameters '{"commands":["${{ inputs.command }}"]}' \
            --output text \
            --query "Command.CommandId")
          echo "command-id=$COMMAND_ID" >> $GITHUB_OUTPUT

    - name: Wait for command completion
      shell: bash
      id: poll-status
      run: |
        echo "Waiting for command to complete"
        while true; do
            STATUS=$(aws ssm list-command-invocations \
                --command-id ${{ steps.run-command.outputs.command-id }} \
                --instance-id ${{ inputs.instance-id }} \
                --details \
                --query "CommandInvocations[0].Status" \
                --output text)

            # Print a progress `.` token until the command completes.
            case $STATUS in
              Pending | InProgress | Delayed )
                echo .
                sleep 5
                continue
                ;; 
              *) 
                echo; # add a newline to end the progress line print. 
                echo "status=$STATUS" >> $GITHUB_OUTPUT
                break ;;
            esac
        done

    - name: Log output and status
      shell: bash
      env:
        STATUS: ${{ steps.poll-status.outputs.status }}
      run: |
        # Grab the command output. Unfortunately this gets truncated at 2500 characters so its
        # not terribly useful for debugging but such is life.
        OUTPUT=$(aws ssm list-command-invocations \
            --command-id ${{ steps.run-command.outputs.command-id }} \
            --instance-id ${{ inputs.instance-id }} \
            --details \
            --query "CommandInvocations[0].CommandPlugins[0].Output" \
            --output text)
        echo "Command output:\n$OUTPUT"
            
        echo "Command status: ${{ env.STATUS }}"
        if [ ${{ env.STATUS }} != "Success" ]; then
              exit 1
        fi
