[workspace]
members = [
  "bin/faucet",
  "bin/node",
  "bin/remote-prover",
  "bin/stress-test",
  "crates/block-producer",
  "crates/ntx-builder",
  "crates/proto",
  "crates/remote-prover-client",
  "crates/rpc",
  "crates/store",
  "crates/test-macro",
  "crates/utils",
  "proto",
]

resolver = "2"

[workspace.package]
authors      = ["Miden contributors"]
edition      = "2024"
exclude      = [".github/"]
homepage     = "https://miden.xyz"
license      = "MIT"
readme       = "README.md"
repository   = "https://github.com/0xMiden/miden-node"
rust-version = "1.88"
version      = "0.11.0"

# Optimise the cryptography for faster tests involving account creation.
[profile.test.package.miden-crypto]
opt-level = 2

[workspace.dependencies]
# Workspace crates.
miden-node-block-producer  = { path = "crates/block-producer", version = "0.11" }
miden-node-ntx-builder     = { path = "crates/ntx-builder", version = "0.11" }
miden-node-proto           = { path = "crates/proto", version = "0.11" }
miden-node-proto-build     = { path = "proto", version = "0.11" }
miden-node-rpc             = { path = "crates/rpc", version = "0.11" }
miden-node-store           = { path = "crates/store", version = "0.11" }
miden-node-test-macro      = { path = "crates/test-macro" }
miden-node-utils           = { path = "crates/utils", version = "0.11" }
miden-remote-prover-client = { path = "crates/remote-prover-client", version = "0.11" }

# miden-base aka protocol dependencies. These should be updated in sync.
miden-block-prover    = { branch = "pgackst-async-experimental", git = "https://github.com/0xMiden/miden-base" }
miden-lib             = { branch = "pgackst-async-experimental", git = "https://github.com/0xMiden/miden-base" }
miden-objects         = { branch = "pgackst-async-experimental", default-features = false, git = "https://github.com/0xMiden/miden-base" }
miden-testing         = { branch = "pgackst-async-experimental", git = "https://github.com/0xMiden/miden-base" }
miden-tx              = { branch = "pgackst-async-experimental", default-features = false, git = "https://github.com/0xMiden/miden-base" }
miden-tx-batch-prover = { branch = "pgackst-async-experimental", git = "https://github.com/0xMiden/miden-base" }

# Other miden dependencies. These should align with those expected by miden-base.
miden-air = { branch = "async-experimental", git = "https://github.com/0xMiden/miden-vm", version = "0.17" }

# External dependencies
anyhow             = { version = "1.0" }
assert_matches     = { version = "1.5" }
async-trait        = { version = "0.1" }
fs-err             = { version = "3" }
futures            = { version = "0.3" }
hex                = { version = "0.4" }
http               = { version = "1.3" }
humantime          = { version = "2.2" }
itertools          = { version = "0.14" }
prost              = { version = "0.13" }
rand               = { version = "0.9" }
rand_chacha        = { version = "0.9" }
rstest             = { version = "0.25" }
serde              = { features = ["derive"], version = "1" }
thiserror          = { default-features = false, version = "2.0" }
tokio              = { features = ["rt-multi-thread"], version = "1.46" }
tokio-stream       = { version = "0.1" }
toml               = { version = "0.8" }
tonic              = { version = "0.13" }
tonic-reflection   = { version = "0.13" }
tower              = { version = "0.5" }
tower-http         = { features = ["cors", "trace"], version = "0.6" }
tracing            = { version = "0.1" }
tracing-subscriber = { features = ["env-filter", "fmt", "json"], version = "0.3" }
url                = { features = ["serde"], version = "2.5" }

# Lints are set to warn for development, which are promoted to errors in CI.
[workspace.lints.clippy]
# Pedantic lints are set to a lower priority which allows lints in the group to be selectively enabled.
pedantic = { level = "warn", priority = -1 }

cast_possible_truncation     = "allow" # Overly many instances especially regarding indices.
from_iter_instead_of_collect = "allow" # at times `FromIter` is much more readable
ignored_unit_patterns        = "allow" # Stylistic choice.
large_types_passed_by_value  = "allow" # Triggered by BlockHeader being Copy + 334 bytes.
missing_errors_doc           = "allow" # TODO: fixup and enable this.
missing_panics_doc           = "allow" # TODO: fixup and enable this.
module_name_repetitions      = "allow" # Many triggers, and is a stylistic choice.
must_use_candidate           = "allow" # This marks many fn's which isn't helpful.
should_panic_without_expect  = "allow" # We don't care about the specific panic message.
# End of pedantic lints.
