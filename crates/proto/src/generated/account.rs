// This file is @generated by prost-build.
#[derive(Clone, PartialEq, ::prost::Message)]
#[prost(skip_debug)]
pub struct AccountId {
    /// A Miden account ID is a 120-bit value derived from the commitments to account code and
    /// storage, and a random user-provided seed.
    #[prost(bytes = "vec", tag = "1")]
    pub id: ::prost::alloc::vec::Vec<u8>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AccountSummary {
    #[prost(message, optional, tag = "1")]
    pub account_id: ::core::option::Option<AccountId>,
    #[prost(message, optional, tag = "2")]
    pub account_hash: ::core::option::Option<super::digest::Digest>,
    #[prost(uint32, tag = "3")]
    pub block_num: u32,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AccountInfo {
    #[prost(message, optional, tag = "1")]
    pub summary: ::core::option::Option<AccountSummary>,
    #[prost(bytes = "vec", optional, tag = "2")]
    pub details: ::core::option::Option<::prost::alloc::vec::Vec<u8>>,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct AccountHeader {
    /// Vault root hash.
    #[prost(message, optional, tag = "1")]
    pub vault_root: ::core::option::Option<super::digest::Digest>,
    /// Storage root hash.
    #[prost(message, optional, tag = "2")]
    pub storage_commitment: ::core::option::Option<super::digest::Digest>,
    /// Code root hash.
    #[prost(message, optional, tag = "3")]
    pub code_commitment: ::core::option::Option<super::digest::Digest>,
    /// Account nonce.
    #[prost(uint64, tag = "4")]
    pub nonce: u64,
}
