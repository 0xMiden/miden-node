// Specification of the user facing gRPC API.
syntax = "proto3";
package block_producer;

import "requests.proto";
import "responses.proto";

import "block.proto";
import "digest.proto";
import "note.proto";
import "transaction.proto";

import "google/protobuf/empty.proto";

service Api {
    // Submits proven transaction to the Miden network
    rpc SubmitProvenTransaction(requests.SubmitProvenTransactionRequest) returns (responses.SubmitProvenTransactionResponse) {}

    // Returns the status info.
    rpc Status(google.protobuf.Empty) returns (responses.BlockProducerStatusResponse) {}

    // Begins a stream of new mempools events.
    rpc MempoolEvents(google.protobuf.Empty) returns (stream MempoolEvent) {}
}

message MempoolEvent {
    oneof event {
        TransactionAdded transaction_added = 1;
        BlockCommitted block_committed = 2;
        TransactionsReverted transactions_reverted = 3;
    };
}

// A transaction was added to the mempool.
message TransactionAdded {
    // The ID of the transaction.
    transaction.TransactionId id = 1;
    // Nullifiers consumed by the transaction.
    repeated digest.Digest nullifiers = 2;
    // Network notes created by the transaction.
    repeated note.NetworkNote network_notes = 3;
}

// A block was committed.
message BlockCommitted {
    block.BlockHeader block_header = 1;   
    repeated transaction.TransactionId transactions = 2;
}

// A set of transactions was reverted and dropped from the mempool.
message TransactionsReverted {
    repeated transaction.TransactionId reverted = 1;
}
