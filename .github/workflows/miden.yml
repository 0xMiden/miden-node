name: EC2 Miden Node Setup and Upgrade

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment Environment'
        required: true
        default: 'testnet'
  push:
    branches:
      - next

permissions:
  id-token: write
  contents: read

jobs:
  setup-ec2:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::211125515935:role/Miden-GithubActionsRole
          aws-region: us-west-2

      - name: SSH into EC2 and install dependencies
        run: |
          ssh -i miden-test.pem -o "StrictHostKeyChecking no" ec2-user@54.154.193.162 << 'EOF'
            sudo yum update -y
            sudo yum install -y git gcc openssl-devel bzip2-devel libffi-devel make
            sudo yum groupinstall -y "Development Tools"

            # Install Rust
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
            source $HOME/.cargo/env
            rustup update

            # Install dependencies
            sudo yum install -y clang cmake
EOF

  check-crates:
    runs-on: ubuntu-latest
    needs: setup-ec2
    steps:
      - name: Check for updates on crates.io
        run: |
          NEW_VERSION=$(curl -s https://crates.io/api/v1/crates/miden-node | jq -r '.crate.max_version')
          CURRENT_VERSION=$(ssh -i miden-test.pem -o "StrictHostKeyChecking no" ec2-user@54.154.193.162 "miden-node --version | cut -d ' ' -f2")
          if [ "$NEW_VERSION" != "$CURRENT_VERSION" ]; then
            echo "::set-output name=update_needed::true"
          else
            echo "::set-output name=update_needed::false"
          fi

  update-ec2:
    runs-on: ubuntu-latest
    needs: check-crates
    if: needs.check-crates.outputs.update_needed == 'true'
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::211125515935:role/Miden-GithubActionsRole
          aws-region: us-west-2

      - name: SSH into EC2 and upgrade miden-node
        run: |
          ssh -i miden-test.pem -o "StrictHostKeyChecking no" ec2-user@54.154.193.162 << 'EOF'
            # Stop the miden-node service
            sudo systemctl stop miden-node
            sudo systemctl stop miden-faucet

            # Remove previous data
            # rm -rf /home/ec2-user/miden-node
            # rm -rf /home/ec2-user/miden-faucet

            rm -rf ~/miden-node; mkdir ~/miden-node
            rm -rf ~/miden-faucet; mkdir ~/miden-faucet

            # Install latest versions of miden-node and miden-faucet
            cargo install miden-node miden-faucet --locked --features testing

            # Initialize the services again
            # miden-node init
            # miden-faucet init

            miden-node init -c ~/miden-node/miden-node.toml -g ~/miden-node/genesis.toml
            miden-node make-genesis -i ~/miden-node/genesis.toml -o ~/miden-node/genesis.dat
            miden-faucet init -c ~/miden-faucet/miden-faucet.toml

            # Configure systemd service
            sudo tee /etc/systemd/system/miden-node.service > /dev/null <<EOT
            [Unit]
            Description=Miden Node
            After=network.target

            [Service]
            ExecStart=/home/ec2-user/.cargo/bin/miden-node start -c miden-node.toml node
            ExecStart=/home/ec2-user/.cargo/bin/miden-faucet start -c miden-faucet.tomls
            Restart=on-failure
            User=ec2-user
            WorkingDirectory=/home/ec2-user
            Environment="RUST_LOG=info"
            LimitNOFILE=10000

            [Install]
            WantedBy=multi-user.target
            EOT

            sudo systemctl daemon-reload
            sudo systemctl enable miden-node
            sudo systemctl start miden-node
EOF