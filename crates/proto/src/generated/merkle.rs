// This file is @generated by prost-build.
/// Represents a Merkle path.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MerklePath {
    /// List of sibling node hashes, in order from the root to the leaf.
    #[prost(message, repeated, tag = "1")]
    pub siblings: ::prost::alloc::vec::Vec<super::digest::Digest>,
}
/// A different representation of a Merkle path designed for memory efficiency.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SparseMerklePath {
    /// A bitmask representing empty nodes.
    ///
    /// The set bit corresponds to the depth of an empty node. The least significant bit (bit 0)
    /// describes depth 1 node (root's children). The `bit index + 1` is equal to node's depth.
    #[prost(fixed64, tag = "1")]
    pub empty_nodes_mask: u64,
    /// The non-empty nodes, stored in depth-order, but not contiguous across depth.
    #[prost(message, repeated, tag = "2")]
    pub siblings: ::prost::alloc::vec::Vec<super::digest::Digest>,
}
