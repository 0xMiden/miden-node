# Cargo Makefile

# If running cargo-make in a workspace you need to add this env variable to make sure it function correctly.
# See docs: https://github.com/sagiegurari/cargo-make?tab=readme-ov-file#usage
[env]
CARGO_MAKE_EXTEND_WORKSPACE_MAKEFILE = true

# linting
[tasks.format]
toolchain = "nightly"
command = "cargo"
args = ["fmt", "--all"]

[tasks.format-check]
toolchain = "nightly"
command = "cargo"
args = ["fmt", "--all", "--", "--check"]

[tasks.clippy-default]
command = "cargo"
args = ["clippy","--workspace", "--all-targets", "--", "-D", "clippy::all", "-D", "warnings"]

[tasks.clippy-all-features]
command = "cargo"
args = ["clippy","--workspace", "--all-targets", "--all-features", "--", "-D", "clippy::all", "-D", "warnings"]

[tasks.clippy]
dependencies = [
  "clippy-default",
  "clippy-all-features"
]

[tasks.lint]
dependencies = [
    "format",
    "format-check",
    "clippy",
    "docs"
]

# documentation
[tasks.doc]
env = { "RUSTDOCFLAGS" = "-D warnings" }
command = "cargo"
args = ["doc", "--verbose", "--all-features", "--keep-going", "--release"]

# testing
[tasks.test]
command = "cargo"
args = ["test", "--all-features", "--workspace", "--", "--nocapture"]

# docker builds
[tasks.docker-build-node]
script = '''
CREATED=$(date)
VERSION=$(cat node/Cargo.toml | grep -m 1 '^version' | cut -d '"' -f 2)
COMMIT=$(git rev-parse HEAD)

docker build --build-arg CREATED="$CREATED" \
             --build-arg VERSION="$VERSION" \
             --build-arg COMMIT="$COMMIT" \
             -f node/Dockerfile \
             -t miden-node-image .
'''
workspace = false

[tasks.docker-build-block-producer]
script = '''
CREATED=$(date)
VERSION=$(cat block-producer/Cargo.toml | grep -m 1 '^version' | cut -d '"' -f 2)
COMMIT=$(git rev-parse HEAD)

docker build --build-arg CREATED="$CREATED" \
             --build-arg VERSION="$VERSION" \
             --build-arg COMMIT="$COMMIT" \
             -f block-producer/Dockerfile \
             -t miden-node-block-producer-image .
'''
workspace = false


[tasks.docker-build-rpc]
script = '''
CREATED=$(date)
VERSION=$(cat rpc/Cargo.toml | grep -m 1 '^version' | cut -d '"' -f 2)
COMMIT=$(git rev-parse HEAD)

docker build --build-arg CREATED="$CREATED" \
             --build-arg VERSION="$VERSION" \
             --build-arg COMMIT="$COMMIT" \
             -f rpc/Dockerfile \
             -t miden-node-rpc-image .
'''
workspace = false

[tasks.docker-build-store]
script = '''
CREATED=$(date)
VERSION=$(cat store/Cargo.toml | grep -m 1 '^version' | cut -d '"' -f 2)
COMMIT=$(git rev-parse HEAD)

docker build --build-arg CREATED="$CREATED" \
             --build-arg VERSION="$VERSION" \
             --build-arg COMMIT="$COMMIT" \
             -f store/Dockerfile \
             -t miden-node-store-image .
'''
workspace = false

# docker runs
[tasks.docker-run-node]
script = '''
docker volume create miden-node-db

ABSOLUTE_PATH="$(pwd)/node/miden-node.toml"

docker run --name miden-node \
           -p 57291:57291 \
           -v miden-node-db:/db \
           -v "${ABSOLUTE_PATH}:/miden-node.toml" \
           -d miden-node-image
'''
workspace = false

[tasks.docker-run-block-producer]
script = '''
ABSOLUTE_PATH="$(pwd)/block-producer/miden-block-producer.toml"

docker run --name miden-node-block-producer \
           --network miden \
           -p 48046:48046 \
           -v "${ABSOLUTE_PATH}:/miden-block-producer.toml" \
           -d miden-node-block-producer-image
'''
workspace = false

[tasks.docker-run-rpc]
script = '''
ABSOLUTE_PATH="$(pwd)/rpc/miden-rpc.toml"

docker run --name miden-node-rpc \
           --network miden \
           -p 57291:57291 \
           -v "${ABSOLUTE_PATH}:/miden-rpc.toml" \
           -d miden-node-rpc-image
'''
workspace = false

[tasks.docker-run-store]
script = '''
docker volume create miden-node-store-db

ABSOLUTE_PATH="$(pwd)/store/miden-store.toml"

docker run --name miden-node-store \
           --network miden \
           -p 28943:28943 \
           -v miden-node-store-db:/db \
           -v "${ABSOLUTE_PATH}:/miden-store.toml" \
           -d miden-node-store-image
'''
workspace = false
