on:
  workflow_call:
    inputs:      
      target:
        type: string
        default: "devnet"
      tag:
        type: string
        default: "next"
      oidcrole:
        type: string
        default: midendev
      account_id:
        type: string
      instance_id:
        type: string

permissions:
  id-token: write
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with: 
          aws-region: eu-west-1
          role-to-assume: "arn:aws:iam::${{ secrets[inputs.account_id] }}:role/${{ inputs.oidcrole }}-GithubActionsRole"
          role-session-name: GithubActionsSession

      - name: Checkout Code Repository for reusable action
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install awscli
        uses: ./.github/actions/ssm_execute
        with:
          instance_id: ${{ secrets[inputs.instance_id] }}
          command: |
            sudo apt udpate; \
            sudo apt install awscli -y
        if: ${{ inputs.target == 'devnet' }}

      - name: Execute Architecture for instance
        id: get_arch
        uses: ./.github/actions/ssm_execute
        with:
          instance_id: ${{ secrets[inputs.instance_id] }}
          command: |
            uname -m

      - name: Determine architecture
        run: |
          if [[ "${{ steps.get_arch.outputs.cmd_result }}" =~ ^x86 ]]; then
            echo "package_postfix=amd64.deb" >> $GITHUB_ENV
          else
            echo "package_postfix=arm64.deb" >> $GITHUB_ENV
          fi

      - name: Stop miden services
        uses: ./.github/actions/ssm_execute
        with:
          instance_id: ${{ secrets[inputs.instance_id] }}
          command: |
            sudo systemctl stop miden-node; sudo systemctl stop miden-faucet; sudo apt remove miden-node miden-faucet -y; sudo rm -f miden-*

      - name: Package download testnet
        uses: ./.github/actions/ssm_execute
        with:
          instance_id: ${{ secrets[inputs.instance_id] }}
          command: |
            wget https://github.com/0xPolygonMiden/miden-node/releases/download/${{ inputs.tag }}/miden-faucet-${{ inputs.tag }}-${{ env.package_postfix }}; \
            wget https://github.com/0xPolygonMiden/miden-node/releases/download/${{ inputs.tag }}/miden-node-${{ inputs.tag }}-${{ env.package_postfix }}
        if: ${{ inputs.target == 'testnet' }}

      - name: Download package to github runner
        uses: actions/download-artifact@v3
        with:
          name: devnet_package
        if: ${{ inputs.target == 'devnet' }}

      - name: Upload packages to S3
        run: |
          # Copy miden-node package to S3
          aws s3 cp ${{ runner.workspace }}/miden-node/miden-node-${{ inputs.tag }}-${{ env.package_postfix }} \
            s3://release-artifacts-${{ secrets[inputs.account_id] }}/miden-node-${{ inputs.tag }}-${{ env.package_postfix }}
          # Copy miden-faucet package to S3
          aws s3 cp ${{ runner.workspace }}/miden-node/miden-faucet-${{ inputs.tag }}-${{ env.package_postfix }} \
            s3://release-artifacts-${{ secrets[inputs.account_id] }}/miden-faucet-${{ inputs.tag }}-${{ env.package_postfix }}
        if: ${{ inputs.target == 'devnet' }}

      - name: Download package to devnet
        uses: ./.github/actions/ssm_execute
        with:
          instance_id: ${{ secrets[inputs.instance_id] }}
          command: |
            aws s3 cp s3://release-artifacts-${{ secrets[inputs.account_id] }}/miden-node-${{ inputs.tag }}-${{ env.package_postfix }} miden-node-${{ inputs.tag }}-${{ env.package_postfix }}; \
            aws s3 cp s3://release-artifacts-${{ secrets[inputs.account_id] }}/miden-faucet-${{ inputs.tag }}-${{ env.package_postfix }} miden-faucet-${{ inputs.tag }}-${{ env.package_postfix }}
        if: ${{ inputs.target == 'devnet' }}
      
      - name: Package install on ${{ inputs.target }}
        uses: ./.github/actions/ssm_execute
        with:
          instance_id: ${{ secrets[inputs.instance_id] }}
          command: |
            dpkg -i miden-node-${{ inputs.tag }}-${{ env.package_postfix }}; \
            dpkg -i miden-faucet-${{ inputs.tag }}-${{ env.package_postfix }}

      - name: Configure environment
        uses: ./.github/actions/ssm_execute
        with:
          instance_id: ${{ secrets[inputs.instance_id] }}
          command: |
            sudo chown -R miden /opt/miden; \
            sudo /usr/bin/miden-node init -c /etc/miden/miden-node.toml -g /opt/miden/miden-node/genesis.toml; \
            sudo /usr/bin/miden-node make-genesis -i /opt/miden/miden-node/genesis.toml -o /opt/miden/miden-node/genesis.dat --force; \
            sudo /usr/bin/miden-faucet init -c /opt/miden/miden-faucet/miden-faucet.toml

      - name: Start miden node service
        uses: ./.github/actions/ssm_execute
        with:
          instance_id: ${{ secrets[inputs.instance_id] }}
          command: |
              sudo systemctl daemon-reload; \
              sudo systemctl start miden-node

      - name: Start miden faucet service
        uses: ./.github/actions/ssm_execute
        with:
          instance_id: ${{ secrets[inputs.instance_id] }}
          command: |
            sudo systemctl daemon-reload; \
            sudo systemctl start miden-faucet
