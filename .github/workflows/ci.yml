# Runs the CI

name: CI

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  version:
    name: check rust version consistency
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          profile: minimal
          override: true
      - name: check rust versions
        run: ./scripts/check-rust-version.sh

  rustfmt:
    name: rustfmt nightly on ubuntu-latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install minimal Rust with rustfmt
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt
          override: true
      - name: Install cargo make
        run: cargo install cargo-make
      - name: cargo make - format
        run: cargo make format

  clippy:
    name: clippy stable on ubuntu-latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install minimal Rust with clippy
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: clippy
          override: true
      - name: Install cargo make
        run: cargo install cargo-make
      - name: cargo make - clippy
        run: cargo make clippy

  doc:
    name: doc stable on ubuntu-latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
      - name: Doc
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args:
      - name: Check docs
        uses: actions-rs/cargo@v1
        env:
          RUSTDOCFLAGS: -D warnings
        with:
          command: doc
          args: --verbose --keep-going ${{matrix.args}}

  test:
    name: test stable on ubuntu-latest
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
      - name: Install cargo make
        run: cargo install cargo-make
      - name: cargo make - format
        run: cargo make test

